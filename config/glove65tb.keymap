#define ZMK_POINTING_DEFAULT_SCRL_VAL 150

#include <behaviors/rgbled_widget.dtsi>
#include <dt-bindings/zmk/input_transform.h>
#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

// Layer Numbering

#define DEFAULT 0
#define NUM     1
#define SYM     2
#define FUN     3
#define MOUSE   4
#define SCROLL  5
#define SNIPE   6

&mmv {
    delay-ms = <20>;
    trigger-period-ms = <5>;
    time-to-max-speed-ms = <100>;
    acceleration-exponent = <2>;
};

&msc {
    delay-ms = <3>;
    trigger-period-ms = <3>;
    time-to-max-speed-ms = <100>;
    acceleration-exponent = <0>;
};

/ {
    input_processors {
        zip_wheel_scaler: zip_wheel_scaler {
            compatible = "zmk,input-processor-scaler";
            #input-processor-cells = <2>;
            type = <INPUT_EV_REL>;
            codes = <INPUT_REL_WHEEL>;
            track-remainders;
        };
    };
};

/ {
    combos {
        compatible = "zmk,combos";

        scroll {
            bindings = <&mo 5>;
            key-positions = <50 51>;
        };
    };

    behaviors {
        sensor_rotate_kp: sensor_rotate_kp {
            compatible = "zmk,behavior-sensor-rotate-var";
            #sensor-binding-cells = <2>;
            bindings = <&kp>, <&kp>;
        };

        mouse_wheel_scroll: mouse_wheel_scroll {
            compatible = "zmk,behavior-sensor-rotate-var";
            #sensor-binding-cells = <2>;
            bindings = <&msc>, <&msc>;

            tap-ms = <20>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = "DEFAULT";
            bindings = <
&lt 6 F13       &kp N1        &kp N2             &kp N3        &kp N4              &kp N5                                        &kp N6       &kp N7  &kp N8     &kp N9     &kp N0           &lt 4 MINUS
&kp TAB         &kp Q         &kp W              &kp E         &kp R               &kp T        &kp Y             &kp T          &kp Y        &kp U   &kp I      &kp O      &kp P            &lt 5 NON_US_BACKSLASH
&kp DEL         &kp A         &kp S              &kp D         &kp F               &kp G        &kp H             &kp G          &kp H        &kp J   &kp K      &kp L      &lt 3 SEMICOLON  &lt 6 COLON
&kp LEFT_SHIFT  &kp Z         &kp X              &kp C         &kp V               &kp B        &lt 5 PLUS        &lt 1 B        &kp N        &kp M   &mkp LCLK  &mkp MCLK  &mkp RCLK        &kp RIGHT_SHIFT
&kp LCTRL       &kp LEFT_WIN  &lt 4 PRINTSCREEN  &kp LEFT_ALT  &lt 1 INT_MUHENKAN  &lt 2 SPACE  &lt 3 INT_HENKAN  &kp BACKSPACE  &lt 2 ENTER                                &kp RIGHT_ALT    &kp RCTRL
            >;

            sensor-bindings = <&mouse_wheel_scroll SCRL_UP SCRL_DOWN>;
        };

        number_layer {
            label = "NUM";
            bindings = <
&kp ESC  &kp EXCL  &kp AT           &kp HASH         &kp DOLLAR       &kp PERCENT                                  &kp CARET    &kp AMPERSAND   &kp ASTERISK    &kp LPAR         &kp RPAR      &kp F5
&trans   &trans    &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp KP_DIVIDE    &trans     &trans           &trans       &mkp MB4        &kp UP_ARROW    &mkp MB5         &kp LBKT      &kp RBKT
&trans   &trans    &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp KP_ASTERISK  &trans     &trans           &trans       &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &kp LC(W)     &kp LC(LS(T))
&trans   &trans    &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp KP_PLUS      &kp CARET  &kp UNDER        &trans       &trans          &kp LT          &kp GT           &kp QUESTION  &trans
&trans   &trans    &kp KP_NUMBER_0  &kp PERIOD       &trans           &trans           &trans     &kp LS(LC(TAB))  &kp LC(TAB)                                                   &trans        &trans
            >;
        };

        symbol_layer {
            label = "SYM";
            bindings = <
&trans  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                             &trans       &trans          &trans          &trans           &trans     &trans
&trans  &trans        &trans        &trans        &trans        &bt BT_CLR    &trans    &trans           &trans       &kp R           &kp UP_ARROW    &kp A            &kp F      &trans
&trans  &trans        &trans        &trans        &trans        &trans        &ind_con  &trans           &trans       &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &kp LC(W)  &kp LS(LC(T))
&trans  &trans        &trans        &trans        &trans        &trans        &ind_bat  &trans           &trans       &trans          &kp LC(C)       &kp LC(X)        &kp LC(V)  &trans
&trans  &trans        &trans        &trans        &trans        &trans        &trans    &kp LC(LS(TAB))  &kp LC(TAB)                                                   &kp LC(Z)  &kp LS(LC(Z))
            >;
        };

        function_layer {
            label = "FUN";
            bindings = <
&trans  &kp F1  &kp F2          &kp F3          &kp F4           &kp F5                                           &kp F6       &kp F7          &kp F8          &kp F9           &kp F10    &kp F11
&trans  &kp F   &kp R           &kp UP_ARROW    &kp A            &kp P      &kp C_VOLUME_DOWN  &kp K_MUTE         &kp F        &kp R           &kp UP_ARROW    &kp A            &kp P      &kp F12
&trans  &trans  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &trans     &kp C_VOLUME_UP    &kp C_VOLUME_UP    &trans       &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &trans     &trans
&trans  &trans  &trans          &trans          &trans           &trans     &kp C_VOLUME_DOWN  &kp C_VOLUME_DOWN  &trans       &trans          &trans          &trans           &trans     &trans
&trans  &trans  &trans          &trans          &trans           &mkp RCLK  &trans             &kp LS(LC(TAB))    &kt LC(TAB)                                                   &kp LC(Z)  &kp LS(LC(Z))
            >;

            sensor-bindings = <&sensor_rotate_kp C_VOLUME_DOWN C_VOLUME_UP>;
        };

        mouse_layer {
            label = "MOUSE";
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans                          &trans  &trans
            >;
        };

        scroll_layer {
            label = "SCROLL";
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans                          &trans  &trans
            >;
        };

        snipe_layer {
            label = "SNIPE";
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans                          &trans  &trans
            >;
        };

        layer_7 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans                          &trans  &trans
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        Test {
            if-layers = <1 2>;
            then-layer = <7>;
        };
    };
};
